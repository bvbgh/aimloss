5!
5/(5 + 10) *0.4 + 0.6*10/15
theta=seq(from=0,to=1,by=.01)
plot(theta,dbeta(theta,1,1),type="l")
plot(theta,dbeta(theta,4,2),type="l")
plot(theta,dbeta(theta,2,1),type="l")
plot(theta,dbeta(theta,4,2),type="l")
plot(theta,dbeta(theta,8,4),type="l")
1-pbeta(.25,8,4)
1-pbeta(.5,8,4)
1-pbeta(.8,8,4)
41/(41+11)  # posterior mean
33/40       # MLE
lines(theta,dbeta(theta,41,11))
lines(theta,dbeta(theta,41,11))
plot(theta,dbeta(theta,8,4),type="l")
lines(theta,dbeta(theta,41,11))
plot(theta,dbeta(theta,32,20),type="l")
lines(theta,dbeta(theta,8,4),lty=2)
lines(theta,44*dbinom(24,size=40,p=theta),lty=3)
plot(theta,dbeta(theta,41,11),type="l")
lines(theta,dbeta(theta,8,4),lty=2)
# plot likelihood
lines(theta,dbinom(33,size=40,p=theta),lty=3)
# plot scaled likelihood
lines(theta,44*dbinom(33,size=40,p=theta),lty=3)
plot(theta,dbeta(theta,41,11),type="l")
lines(theta,dbeta(theta,8,4),lty=2)
# plot likelihood
lines(theta,dbinom(33,size=40,p=theta),lty=3)
# plot scaled likelihood
lines(theta,44*dbinom(33,size=40,p=theta),lty=3)
1-pbeta(.25,41,11)
1-pbeta(.5,41,11)
1-pbeta(.8,41,11)
qbeta(.025,41,11)
qbeta(.975,41,11)
theta1=rbeta(1000,41,11)
theta2=rbeta(1000,32,20)
mean(theta1>theta2)
theta1=rbeta(1000,41,11)
# Note for other distributions:
theta1=rbeta(1000,41,11)
theta2=rbeta(1000,32,20)
mean(theta1>theta2)
theta=seq(from=0,to=1,by=.01)
theta=seq(from=0,to=1,by=.01)
plot(theta,dbeta(theta,4,0),type="l")
plot(theta,dbeta(theta,4,0),type="l")
dbeta(theta,4,0)
dbeta(theta,4,1)
plot(theta,dbeta(theta,1,5),type="l")
1/6
pbeta(.5,1,5)
qbeta(.975,8,16)
qbeta(.025,8,16)
pbeta(.35,8,16) #8
pbeta(.35,8,11) #8
pbeta(.35,8,21) #8
theta=seq(from=0,to=1,by=.01)
plot(theta,dgamma(theta,8,1),type="l")
lines(theta,dgamma(theta,67,6),lty=2)
dgamma
lines(theta,dgamma(theta,67,1/6),lty=2)
theta=seq(from=0,to=1,by=.01)
alpha = 8
beta = 1
plot(theta,dgamma(theta,alpha,1/beta),type="l")
alpha = 67
beta = 6
lines(theta,dgamma(theta,alpha,1/beta),lty=2)
theta=seq(from=0,to=1,by=.01)
alpha = 8
beta = 1
plot(theta,dgamma(theta,alpha,1/beta),type="l")
alpha = 67
beta = 6
lines(theta,dgamma(theta,alpha,1/beta),lty=2)
theta=seq(from=0,to=1,by=.01)
alpha = 8
beta = 1
plot(theta,dgamma(theta,sqrt(alpha),1/sqrt(beta)),type="l")
alpha = 67
beta = 6
lines(theta,dgamma(theta,sqrt(alpha),1/sqrt(beta)),lty=2)
theta=seq(from=0,to=20,by=.01)
alpha = 8
beta = 1
plot(theta,dgamma(theta,sqrt(alpha),1/sqrt(beta)),type="l")
alpha = 67
beta = 6
lines(theta,dgamma(theta,sqrt(alpha),1/sqrt(beta)),lty=2)
67/6 #6
qgamma(.05,67,6)
6.0004/120.04
b = 20 + 12 + 15 + 8 + 13.5 + 25
a = 1 + 5
mu = a/b
1/mu
qgamma(.1,a,b)
pgamma(.1,a,b)
b = 30 +3 + 16 + 8 + 114 + 60 + 4 + 23 + 30 + 105
b = 30 +3 + 16 + 8 + 114 + 60 + 4 + 23 + 30 + 105
qgamma(.975,a,b) #7
qgamma(.975,a,b) #7
1/qgamma(.975,a,b) #7
theta=seq(from=0,to=120,by=.1)
plot(theta,dgamma(theta,a,b),type="l") #10
theta=seq(from=0.1,to=120,by=.1)
plot(theta,dgamma(theta,a,b),type="l") #10
dgamma(theta,a,b)
dgamma(theta,sqrt(a),1/sqrt(b))
plot(theta,dgamma(theta,sqrt(a),1/sqrt(b)),type="l") #10
pgamma(.1,sqrt(a),1/sqrt(b)) #3
qgamma(.975,sqrt(a),1/sqrt(b)) #9
qgamma(.975,a,b) #9
dgamma(theta,a,b)
theta=seq(from=0.1,to=120,by=.1)
ystar <- function(y,a,b){
b^a*b/(b+y)^(a+1)
}
plot(theta,ystar(theta, a, b)),type="l") #10
plot(theta,ystar(theta, a, b),type="l") #10
a = 1+8
b = 30 + 16 + 8 + 114 + 60 + 4 + 23 + 30 + 105 #8
qgamma(.975,a,b) #9
t <- c(94.6, 95.4, 96.2, 94.9, 95.9)
var(t)
mean(t)
mu = 5/(5 + 0.25/var(t))*mean(t) + 0.25/var(t)/(n=0.25/var(t))*100
mu
mu = 5/(5 + 0.25/var(t))*mean(t) + 0.25/var(t)/(n+ 0.25/var(t))*100
mu
n = 5
mu = 5/(5 + 0.25/var(t))*mean(t) + 0.25/var(t)/(n+ 0.25/var(t))*100
length(t)
mu = n/(n + var0/var(t))*mean(t) + var0/var(t)/(n+ var0/var(t))*m0
var0 = 0.25
m0 = 100
n = length(t)
mu = n/(n + var0/var(t))*mean(t) + var0/var(t)/(n+ var0/var(t))*m0
w = var0/var(t)
mu = (n*mean(t) + w*m0)/(n+w)
mu = (n*mean(t) + w*m0)/(n+w)
w = var(t)/var0
mu = (n*mean(t) + w*m0)/(n+w)
mean(t)
qnorm(.975,mean(t), 0.25) #9
mean(t)
dnorm(.975,mean(t), 0.25) #9
pnorm(.975,mean(t), 0.25) #9
pnorm(100,mean(t), 0.25) #9
qnorm(.99991,mean(t), 0.25) #9
var(t)
var(t)^2
sqrt(var(t))
w = var0/var(t)
mu = (n*mean(t) + w*m0)/(n+w)
var(t)
w = length(t) + 1
vart/w
m = mean(t)
vart = var(t)
w = length(t) + 1
vart/w
w
vart
0.25/w
vart/w
vart = var0
vart/w
sd = sqrt(vart)
sd
w = length(t) + 1
vart = var0/w
sd = sqrt(vart)
qnorm(.975,m,sd) #4
qnorm(.99991,mean(t), 0.25) #5
pnorm(100,m, sd) #5
install.packages(c("backports", "car", "checkmate", "curl", "DBI", "devtools", "dplyr", "evaluate", "foreign", "Formula", "git2r", "Hmisc", "htmltools", "htmlwidgets", "igraph", "irlba", "jsonlite", "knitr", "Matrix", "R6", "Rcpp", "RcppEigen", "SparseM", "tibble"))
rm(list = ls())
library(ggplot2)
library(grid)
library(gridExtra)
library(Hmisc)
library(plyr)
library(RColorBrewer)
library(dict)
library(gtable)
library(lubridate)
library(xlsx)
setwd('/Users/B.Bronk/Documents/MA Code Minimal/Final Code Set/')
load("RObject_pull_comp_comments.gzip")
DF <- GH_data_df_pull_comp
View(GH_data_df_pull_comp)
.Library
load("RObject_comp.gzip")
View(GH_data_df_comp)
pwd()
pwd()
getwd()
source('~/Documents/MA Code Minimal/Final Code Set/Step3_1.R', echo=TRUE)
source('~/Documents/MA Code Minimal/Final Code Set/Step3_1.R', echo=TRUE)
opened <- aggregate(DFusers$merged, by = list(DFusers$opener), sum)
save
source('~/Documents/MA Code Minimal/Final Code Set/Step3_1.R', echo=TRUE)
source('~/Documents/MA Code Minimal/Final Code Set/Step3_2.R', echo=TRUE)
View(DFusers)
source('~/Documents/MA Code Minimal/Final Code Set/Step3_1.R', echo=TRUE)
source('~/Documents/MA Code Minimal/Final Code Set/Step3_1.R', echo=TRUE)
source('~/Documents/MA Code Minimal/Final Code Set/Step3_2.R', echo=TRUE)
source('~/Documents/MA Code Minimal/Final Code Set/Step3_3_network.R', echo=TRUE)
source('~/Documents/MA Code Minimal/Final Code Set/Step3_3_network.R', echo=TRUE)
source('~/Documents/MA Code Minimal/Final Code Set/Step3_2.R', echo=TRUE)
repoName
DFusers[DFusers$repo == repoName,]
catDictKeysFull
DFusers$repo
uniqe(DFusers$repo)
unique(DFusers$repo)
match(catDictKeysFull, unique(DFusers$repo))
intersect(catDictKeysFull, unique(DFusers$repo))
source('~/Documents/MA Code Minimal/Final Code Set/Step3_2.R', echo=TRUE)
source('~/Documents/MA Code Minimal/Final Code Set/Step3_2.R', echo=TRUE)
source('~/Documents/MA Code Minimal/Final Code Set/Step3_2.R', echo=TRUE)
source('~/Documents/MA Code Minimal/Final Code Set/Step3_2.R', echo=TRUE)
